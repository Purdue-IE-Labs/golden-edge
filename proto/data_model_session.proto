syntax = "proto3";

import "base_data.proto";

message DataModel {
    /*
    We make the decision here to include the tag paths in the session object that 
    gets sent over the wire. 
    Pros:
        - We do not have to send an entire model every time. Previously, this was necessary
        to ensure a proper matching from config to data. We can send a subset of the model
        and because we have the tag paths in the message, we can map them to their 
        respective configurations (i.e.) type (for decoding) found in the meta.
    Cons:
        - This adds to the size of the message going over the wire. This is only used for 
        parameters and body (so, method calls and tag writes), but if the user is trying to 
        do a lot of those at once, it could become a problem. But we can worry about performance later.
    */
    map<string, DataItem> data = 1;
    // repeated DataItem data = 1;
}

message DataItem {
    oneof data {
        BaseData base_data = 1;
        DataModel model_data = 2;
    }
}

/*
This follows more closely what the API will look like
DataItem {
    model_data {
        tag1: base_data,
        tag2: model_data {
            foo: base_data
        }
    }
}
*/